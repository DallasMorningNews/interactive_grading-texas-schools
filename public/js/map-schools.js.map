{"version":3,"sources":["map-schools.js"],"names":["normalize","string","trim","toLowerCase","addLayers","data","indexName","$","val","map","addSource","type","cluster","addLayer","id","source","paint","circle-radius","base","stops","circle-color","property","gradeColors","filter","fill-color","fill-opacity","fill-outline-color","layout","visibility","addControl","mapboxgl","NavigationControl","dragRotate","disable","touchZoomRotate","disableRotation","popup","Popup","closeButton","closeOnClick","on","e","features","queryRenderedFeatures","point","layers","getCanvas","style","cursor","length","remove","romanNumeral","feature","setLngLat","unproject","setHTML","properties","schoolname","distname","addTo","filterBySchool","value","layer","layerType","letterGrade","setFilter","filterbyGrade","schooltable","column","search","draw","filtered_features","_","d","concat","gid","schoolValue","categoryValue","filtered_grades","col","parseInt","mapboxDraw","dnLoader","change","this","mapProperty","setPaintProperty","columns","click","keyup","searchValue","target","filtered_search","indexOf","newSelection","oldSelection","setLayoutProperty","prop","Map","container","center","zoom","ordinalColors","d3","scaleOrdinal","domain","range","drawMap","after","getJSON","json_data","JSON","parse","stringify","map_data","DataTable","scrollX","order","qtip","classes","content","text","title","button","position","my","at","svg","select","append","attr","legend","legendColor","shapeWidth","orient","scale","call"],"mappings":"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","file":"map-schools.js","sourcesContent":["(function(){\n\n\n\n  var map = new mapboxgl.Map({\n    container: 'map',\n    center: [-96.9785, 32.8924],\n    zoom: 9,\n    style: 'http://maps.dallasnews.com/styles.json'\n  });\n\n  var gradeColors = [\n    [\"A\", '#4575b4'],\n    [\"B\", '#74add1'],\n    [\"C\", '#fdae61'],\n    [\"D\", '#f46d43'],\n    [\"F\", '#d73027'],\n    [\"-\", '#636363']];\n\n  //for the legend\n  var ordinalColors = d3.scaleOrdinal()\n    .domain([\"A\", \"B\", \"C\", \"D\", \"F\"])\n    .range([ \"#4575b4\", \"#74add1\", \"#fdae61\", \"#f46d43\", \"#d73027\"]);\n\n  var data;\n  var districtdata;\n  var schooltable;\n  var indexName;\n  var schoolLayer;\n  var layer;\n  var layerType;\n\n  //taken from mapbox gl\n  function normalize(string) {\n    return string.trim().toLowerCase();\n  }\n\n  //functions to add and remove map layers\n  function addLayers(data){\n    indexName = \"grade\"+ $('#categoryIndex').val();\n\n    map.addSource(\"dataPoints\", {\n        \"type\": \"geojson\",\n        \"data\": data,\n        \"cluster\": false\n    });\n\n    map.addLayer({\n        \"id\": \"campuses\",\n        \"type\": \"circle\",\n        \"source\": \"dataPoints\",\n        \"paint\":{\n          'circle-radius': {\n                'base': 2,\n                'stops': [[9, 3], [18, 150]]\n            },\n          \"circle-color\":{\n            property: indexName,\n            type: \"categorical\",\n            stops: gradeColors\n          }\n        },\n        \"filter\": [\"==\", \"$type\", \"Point\"],\n    });\n\n    map.addLayer({\n        \"id\": \"districts\",\n        \"type\": \"fill\",\n        \"source\": \"dataPoints\",\n        \"paint\": {\n            \"fill-color\": {\n              property: indexName,\n              type: \"categorical\",\n              stops: gradeColors\n            },\n            \"fill-opacity\": 0.4,\n            \"fill-outline-color\": '#636363'\n        },\n        \"filter\": [\"==\", \"$type\", \"Polygon\"],\n        \"layout\":{\n          visibility: 'none'\n        }\n    });\n\n    map.addControl(new mapboxgl.NavigationControl());\n    map.dragRotate.disable();\n    map.touchZoomRotate.disableRotation();\n\n    //pop up description on mouseover\n    var popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n    });\n\n    map.on('mousemove', function(e) {\n      var features = map.queryRenderedFeatures(e.point, { layers: ['campuses', 'districts'] });\n      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';\n\n      if (!features.length) {\n          popup.remove();\n          return;\n      }\n\n      var feature = features[0];\n\n      var romanNumeral;\n      if ($('#categoryIndex').val() == '1'){\n        romanNumeral = 'I';\n      } else if ($('#categoryIndex').val() == '2') {\n        romanNumeral = 'II';\n      } else if ($('#categoryIndex').val() == '3') {\n        romanNumeral = 'III';\n      } else {\n        romanNumeral = 'IV';\n      }\n\n        popup.setLngLat(map.unproject(e.point))\n            .setHTML(\"<p class='campus'>\"+feature.properties.schoolname+\"</p><p>\"+feature.properties.distname+\n                     \"</p><p>Category \"+romanNumeral+\": \"+feature.properties[indexName]+\"</p>\")\n            .addTo(map);\n\n\n    });\n\n  }//add layer function\n\n\n  function filterBySchool(value){\n    indexName = \"grade\"+$('#categoryIndex').val();\n    layer = $('#campusOrDistrict').val();\n    layerType = (layer == 'campuses') ? \"Point\" : \"Polygon\";\n    var letterGrade = $('#grade').val();\n\n    if (value == 'all'){\n\n      if (letterGrade == 'all'){\n        map.setFilter(layer, ['all', ['has', 'gid'], [\"==\", \"$type\", layerType]]);\n      } else {\n        filterbyGrade(letterGrade);\n      }\n\n      schooltable\n        .column(2)\n        .search(\"\")\n        .draw();\n    } else {\n\n      var filtered_features;\n      if (letterGrade == 'all'){\n        filtered_features = _.filter(data.features, function(d){ return d.properties.type == value; });\n      } else {\n        filtered_features = _.filter(data.features, function(d){\n          return d.properties.type == value && d.properties[indexName] == letterGrade;\n        });\n      }\n\n      map.setFilter(layer, ['all', ['in', \"gid\"].concat(filtered_features.map(function(feature){\n        return feature.properties.gid;\n      })), [\"==\", \"$type\", layerType]]);\n\n      schooltable\n        .column(2)\n        .search(value)\n        .draw();\n    }\n  }\n\n  function filterbyGrade(value){\n    var schoolValue = $('#schoolType').val();\n    var categoryValue = $('#categoryIndex').val();\n    layer = $('#campusOrDistrict').val();\n    layerType = (layer == 'campuses') ? \"Point\" : \"Polygon\";\n\n    indexName = \"grade\"+categoryValue;\n    var col = 2 + parseInt(categoryValue);\n    var letterGrade = value;\n    var filtered_grades;\n\n    if (schoolValue == 'all'){\n      filtered_grades = _.filter(data.features, function(d){\n        return d.properties[indexName] == letterGrade;\n      });\n    } else{\n\n      filtered_grades = _.filter(data.features, function(d){\n        return d.properties.type == schoolValue && d.properties[indexName] == letterGrade;\n      });\n    }\n\n\n    map.setFilter(layer, ['all', ['in', \"gid\"].concat(filtered_grades.map(function(feature){\n      return feature.properties.gid;\n    })), [\"==\", \"$type\", layerType]]);\n\n    schooltable\n      .column(col)\n      .search(letterGrade)\n      .draw();\n  }//filter by grade\n\n\n  function mapboxDraw() {\n    $(\"body\").dnLoader(\"remove\");\n\n    addLayers(data);\n\n    //filter data here\n    var schoolType;\n    var col;\n\n    $('#schoolType').change(function(){\n        filterBySchool(this.value);\n    }); //change function\n\n    $('#grade').change(function(){\n        col = 2 + parseInt($('#categoryIndex').val());\n\n        if (this.value == 'all'){\n\n          filterBySchool($('#schoolType').val());\n\n          schooltable\n            .column(col)\n            .search(\"\")\n            .draw();\n        } else {\n          filterbyGrade(this.value);\n        }\n    }); //change function\n\n    $('#categoryIndex').change(function(){\n      indexName = \"grade\"+this.value;\n      layer = $('#campusOrDistrict').val();\n      var mapProperty = (layer == 'campuses') ? \"circle-color\" : \"fill-color\";\n\n      map.setPaintProperty(layer, mapProperty,\n        {\n          property: indexName,\n          type: \"categorical\",\n          stops: gradeColors\n        });\n\n      schooltable\n       .search( '' )\n       .columns().search( '' )\n       .draw();\n\n      filterBySchool($('#schoolType').val());\n    }); //change function\n\n    $('#clearButton').click(function(){\n      layer = $('#campusOrDistrict').val();\n      layerType = (layer == 'campuses') ? \"Point\" : \"Polygon\";\n\n      map.setFilter(layer, ['all', ['has', 'gid'], [\"==\", '$type', layerType]]);\n\n      schooltable\n       .search( '' )\n       .columns().search( '' )\n       .draw();\n     $('#categoryIndex').val('1');\n     $('#schoolType').val('all');\n     $('#grade').val('all');\n    }); //clear function\n\n    $('input[type=search]').keyup(function(e){\n      $('#categoryIndex').val('1');\n      $('#schoolType').val('all');\n      $('#grade').val('all');\n\n      layer = $('#campusOrDistrict').val();\n      layerType = (layer == 'campuses') ? \"Point\" : \"Polygon\";\n\n      var searchValue = normalize(e.target.value);\n      var filtered_search = _.filter(data.features, function(d){\n        var schoolname = normalize(d.properties.schoolname);\n        var distname = normalize(d.properties.distname);\n        return (schoolname.indexOf(searchValue) > -1 || distname.indexOf(searchValue) > -1) && (schoolname !== '-');\n      });\n\n      map.setFilter(layer, ['all', ['in', \"gid\"].concat(filtered_search.map(function(feature){\n        return feature.properties.gid;\n      })), [\"==\", \"$type\", layerType]]);\n\n    });//input function\n\n    $(\"#campusOrDistrict\").change(function(){\n      $('#categoryIndex').val('1');\n      $('#schoolType').val('all');\n      $('#grade').val('all');\n\n      var newSelection = this.value;\n\n      var oldSelection = (newSelection == 'campuses') ? 'districts' : 'campuses';\n\n      map.setLayoutProperty(oldSelection, 'visibility', 'none');\n      map.setLayoutProperty(newSelection, 'visibility', 'visible');\n\n      if (newSelection == 'districts'){\n        $('#schoolType').prop('disabled', true);\n      } else {\n        $('#schoolType').prop('disabled', false);\n      }\n\n    });\n  }\n\n  var drawMap = _.after(2, mapboxDraw);\n\n  map.on('load', drawMap);\n\n  $.getJSON('assets/accountability_ratings.json', function(json_data){\n\n      data = JSON.parse(JSON.stringify(json_data));\n\n      var map_data = _.filter(data.features, function(d){ return d.properties.gid !== null; });\n      data.features = map_data;\n\n\n      drawMap();\n\n      schooltable = $('#schoolTable').DataTable({\n        \"data\": json_data.features,\n        \"columns\":[\n          {data: \"properties.schoolname\"},\n          {data: \"properties.distname\"},\n          {data: \"properties.type\"},\n          {data: \"properties.grade1\"},\n          {data: \"properties.grade2\"},\n          {data: \"properties.grade3\"},\n          {data: \"properties.grade4\"},\n          {data: \"properties.rating\"},\n          {data: \"properties.lowinc\"}],\n        \"scrollX\": true,\n        \"order\": [[ 1, \"asc\" ], [0, \"asc\"]]\n        });\n    // });\n  });\n\n  // $.getJSON('assets/districts_accountability_ratings.geojson', function(json_data){\n  //   districtdata = JSON.parse(JSON.stringify(json_data));\n  // });\n\n  //question mark tooltips\n  $('#schoolInfo').qtip({\n    style: { classes: 'qtip-default qtip-light qtip-shadow'},\n    content: {\n        text: 'E = Elementary<br/>M = Middle School<br/>H = High School<br/>'+\n        'B = Blended',\n        title: 'School Level',\n        button: true\n    },\n    position: {\n        my: 'top center',\n        at: 'bottom center',\n        target: $('#schoolInfo')\n    }\n  });\n  $('#ratingInfo').qtip({\n    style: { classes: 'qtip-light qtip-shadow'},\n    content: {\n        text: 'Actual rating given by state.<br/>M = Met Standard<br/>A = Met Alternative Standard<br/>'+\n        'I = Improvement Required<br/>Q/X/Z = Not Rated',\n        title: '2016 Rating',\n        button: true\n    },\n    position: {\n        my: 'top right',\n        at: 'bottom center',\n        target: $('#ratingInfo')\n    }\n  });\n  $('#povertyInfo').qtip({\n    style: { classes: 'qtip-light qtip-shadow'},\n    content: {\n        text: 'The percentage of students who are economically disadvantaged.',\n        title: 'Percent Low Income',\n        button: true\n    },\n    position: {\n        my: 'top right',\n        at: 'bottom center',\n        target: $('#povertyInfo')\n    }\n  });\n\n  //make legend\n  var svg = d3.select('#legendScale');\n\n  svg.append('g')\n    .attr('class', 'legendLinear')\n    .attr(\"transform\", \"translate(5,5)\");\n\n  var legend = d3.legendColor()\n    .shapeWidth(30)\n    .orient('horizontal')\n    .scale(ordinalColors);\n\n  svg.select(\".legendLinear\")\n    .call(legend);\n\n})();\n"]}